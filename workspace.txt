az account set --subscription 2c9e694a-be3b-4604-b4d9-dc4bdd41a3e1
az aks get-credentials --resource-group gtahidi_group --name zepmemory

kubectl create secret generic my-secret --from-env-file=.env

kubectl apply -f zep-k8-deployment.yaml

kubectl create configmap zep-config --from-file=config.yaml
kubectl describe pod zep-7949f9799b-z47jt -n zep
kubectl logs zep-7949f9799b-z47jt -n zep
kubectl apply --dry-run=client -f zep-k8-deployment.yaml

kubectl rollout restart deployment zep -n zep




ZEP_STORE_TYPE=postgres
ZEP_STORE_POSTGRES_DSN=postgres://postgres:postgres@zep-postgres:5432/postgres?sslmode=disable
ZEP_SERVER_HOST=0.0.0.0
ZEP_SERVER_PORT=8000
ZEP_SERVER_WEB_ENABLED=true
ZEP_SERVER_MAX_REQUEST_SIZE=5242880
ZEP_NLP_SERVER_URL=http://zep-nlp:5557
ZEP_OPENTELEMETRY_ENABLED=false
ZEP_DEVELOPMENT=false
ZEP_LOG_LEVEL=info
ZEP_AUTH_REQUIRED=false

kubectl scale rs zep-79768fb877-p5s6n --replicas=0 -n zep
zep-79768fb877-zssz6


az aks disable-addons --addons monitoring --name zepmemory --resource-group gtahidi_group
 kubectl port-forward svc/zep-postgres-76dff5f44f-bs7wd 5432:5432

 kclear
 kubectl apply -f zep-config.yaml
kubectl get configmaps
kubectl apply -f zep-config.yaml


#Connecting to the postgres store via bash
kubectl exec -it -n zep $(kubectl get pods -n zep -l app=zep-postgres -o jsonpath="{.items[0].metadata.name}") -- bash
#Accessing the postgres environment
psql -U postgres -d postgres

kubectl logs -n zep $(kubectl get pods -n zep -l app=zep-postgres -o jsonpath="{.items[0].metadata.name}")
